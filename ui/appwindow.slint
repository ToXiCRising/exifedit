import { Button, VerticalBox, HorizontalBox, StandardListView, ScrollView, LineEdit } from "std-widgets.slint";

component ImageViewer inherits Rectangle{
    in property <image> image;
            
            width: 512px;
            height: 512px;
            background: #202126;
            border-radius: 7px;
        
            Image {
                source: image;
                image-fit: contain;
                width: parent.width * 0.95;
                height: parent.height * 0.95;
            }
}

component ImageTile inherits Rectangle {

    in property <bool> selected;
    in property <image> preview_smol;
    in property <string> image_name;
    in-out property <int> id;
    
    background: #202126;
    border-radius: 7px;
    height: 128px;

    TouchArea {
        clicked => {Logic.clickedImageTile(id)}
        VerticalLayout {
            Image {
                source: preview_smol;
                image-fit: contain;
                width: parent.width * 0.95;
                height: parent.height * 0.95;
            }
            Rectangle {
                width: parent.width;
                height: 16px;
                border-radius: 7px;
                background: #4c4d57;
    
                Text {
                    horizontal-alignment: center;
                    text: image_name;
                }
            }   
        }
    }   
}

component ExifTile inherits Rectangle {

    in property <string> field_name;
    in-out property <string> set_text;
    in property <int> tile_id;
    in property <bool> has_focus;


    Rectangle {
        width: parent.width;
        height: 100px;
        border-radius: 7px;
        background: #202126;    

        VerticalLayout {
            padding-top: 12px;
            Text {
                font-weight: 700;
                font-size: 16px;
                horizontal-alignment: center;
                text: field_name;
            }
            Text {
                font-weight: 400;
                font-size: 14px;
                horizontal-alignment: center;
                color: #c8c8c8;
                text: set_text;
            }
            LE := LineEdit {
                horizontal-alignment: center;
                font-size: 16px;
                accepted => {Logic.updatedExifField(tile_id, self.text); self.text = ""} 
            
            }
        } 
    }
}

export component AppWindow inherits Window {

    callback openFileSelector;
    callback writeExifData;
    callback keyPressed(KeyEvent);

    in property <image> icon_;

    in property <image> preview_image;
    in property <string> current_image_exif;

    in property <[string]> carousel_image_names;
    in property <[image]> carousel_images;
    in property <int> carousel_viewport_height;
    in property <int> carousel_cur_selected;

    in property <string> exif_camera;
    in property <string> exif_lens;
    in property <string> exif_focal_length;
    in property <string> exif_iso;
    in property <string> exif_aperture;
    in property <string> exif_shutter_speed;
    in property <int> exif_selected;


    forward-focus: key-handler;
    

    icon: icon_;
    title: "ExifTool";

    
    key-handler:= FocusScope{
        key-pressed(event) => {
            keyPressed(event);
            accept;
        }
        
    HorizontalBox {
        VerticalBox {
            width: 256px;
            Button {
                height: 32px;
                
                text: "Open File Selector";
                clicked => {root.openFileSelector();}
            }
            
            ScrollView {
                viewport-width: parent.width * 0.9;
                viewport-height: carousel_viewport_height * 1px;
                for img_name[i] in carousel_image_names: ImageTile {
                    image_name: img_name;
                    preview_smol: carousel_images[i];
                    id: i;
                    y: 150px * i;
                }
            }
        }

        VerticalBox {   
            ImageViewer {
                image: preview_image;
            }
            Text {
                text: current_image_exif;
            }
        }

        VerticalBox {
            width: 256px;
            Button {
                height: 32px;
                
                text: "Write EXIF Data";
                clicked => {root.writeExifData();}
            }

            ScrollView {
                viewport-width: parent.width * 0.9;
                viewport-height: 768px;
                property <int> spacing: 120;
                ExifTile {
                    field_name: "Camera:";    
                    set_text: exif_camera;
                    tile_id: 0;
                    y: (-325 + self.tile_id * spacing)* 1px;    
                    
                }
                ExifTile {
                    field_name: "Lens:";
                    set_text: exif_lens;
                    tile_id: 1;
                    y: (-325 + self.tile_id * spacing)* 1px;
                }
                ExifTile {
                    field_name: "Focal Length:";
                    set_text: exif_focal_length;
                    tile_id: 2;
                    y: (-325 + self.tile_id * spacing)* 1px;
                }
                ExifTile {
                    field_name: "ISO/ASA:";
                    set_text: exif_iso;
                    tile_id: 3;
                    y: (-325 + self.tile_id * spacing)* 1px;
                }
                ExifTile {
                    field_name: "Aperture:";
                    set_text: exif_aperture;
                    tile_id: 4;
                    y: (-325 + self.tile_id * spacing)* 1px;
                }
                ExifTile {
                    field_name: "Shutter Speed:";           
                    set_text: exif_shutter_speed;
                    tile_id: 5;
                    y: (-325 + self.tile_id * spacing)* 1px;
                }
            }  
        }
    }
    }  
}

export global Logic {
    callback clickedImageTile(int);
    callback updatedExifField(int, string);
}
